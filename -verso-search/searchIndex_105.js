window.docContents[105].resolve({"/Tactics/#Theorem-Proving-in-Lean-4--Tactics":{"contents":"In this chapter, we describe an alternative approach to constructing\nproofs, using tactics.  A proof term is a representation of a\nmathematical proof; tactics are commands, or instructions, that\ndescribe how to build such a proof. Informally, you might begin a\nmathematical proof by saying “to prove the forward direction, unfold\nthe definition, apply the previous lemma, and simplify.” Just as these\nare instructions that tell the reader how to find the relevant proof,\ntactics are instructions that tell Lean how to construct a proof\nterm. They naturally support an incremental style of writing proofs,\nin which you decompose a proof and work on goals one step at a time.\n\nWe will describe proofs that consist of sequences of tactics as\n“tactic-style” proofs, to contrast with the ways of writing proof\nterms we have seen so far, which we will call “term-style”\nproofs. Each style has its own advantages and disadvantages. For\nexample, tactic-style proofs can be harder to read, because they\nrequire the reader to predict or guess the results of each\ninstruction. But they can also be shorter and easier to\nwrite. Moreover, tactics offer a gateway to using Lean's automation,\nsince automated procedures are themselves tactics.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","context":"Theorem Proving in Lean 4","header":"5. Tactics","id":"/Tactics/#Theorem-Proving-in-Lean-4--Tactics"}});