window.docContents[133].resolve({"/Type-Classes/#numerals":{"id":"/Type-Classes/#numerals","header":"10.3. Numerals","context":"Theorem Proving in Lean 4\u0009Type Classes","contents":"Numerals are polymorphic in Lean. You can use a numeral (e.g., 2) to denote an element of any type that implements\nthe type class OfNat.\n\n\n\nLean elaborates the terms (2 : Nat)\n and (2 : Rational)\n as\n@OfNat.ofNat Nat 2 (@instOfNatNat 2)\n and\n@OfNat.ofNat Rational 2 (@instOfNatRational 2)\n respectively.\nWe say the numerals 2 occurring in the elaborated terms are raw natural numbers.\nYou can input the raw natural number 2 using the macro nat_lit 2\n.\n\n\n\nRaw natural numbers are not polymorphic.\n\nThe OfNat\n instance is parametric on the numeral. So, you can define instances for particular numerals.\nThe second argument is often a variable as in the example above, or a raw natural number.\n\n\n\n"},"/The-Conversion-Tactic-Mode/#pattern-matching-conv":{"id":"/The-Conversion-Tactic-Mode/#pattern-matching-conv","header":"11.2. Pattern matching","context":"Theorem Proving in Lean 4\u0009The Conversion Tactic Mode","contents":"Navigation using the above commands can be tedious. One can shortcut it using pattern matching as follows:\n\n\n\nwhich is just syntax sugar for\n\n\n\nOf course, wildcards are allowed:\n\n\n\n"}});